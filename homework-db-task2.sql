CREATE TABLE IF NOT EXISTS Artists (
  ArtistID   SERIAL PRIMARY KEY,
  ArtistName VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Genres (
  GenreID    SERIAL PRIMARY KEY,
  GenreName  VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS ArtistGenre (
  ArtistID INT NOT NULL,
  GenreID  INT NOT NULL,
  PRIMARY KEY (ArtistID, GenreID),
  FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID) ON DELETE CASCADE,
  FOREIGN KEY (GenreID)  REFERENCES Genres(GenreID)  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Albums (
  AlbumID    SERIAL PRIMARY KEY,
  AlbumName  VARCHAR(255) NOT NULL,
  Year       INT
);

CREATE TABLE IF NOT EXISTS AlbumArtist (
  AlbumID  INT NOT NULL,
  ArtistID INT NOT NULL,
  PRIMARY KEY (AlbumID, ArtistID),
  FOREIGN KEY (AlbumID)  REFERENCES Albums(AlbumID)  ON DELETE CASCADE,
  FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Tracks (
  TrackID    SERIAL PRIMARY KEY,
  TrackName  VARCHAR(255) NOT NULL,
  Duration   INT,
  AlbumID    INT NOT NULL,
  FOREIGN KEY (AlbumID) REFERENCES Albums(AlbumID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Collections (
  CollectionID   SERIAL PRIMARY KEY,
  CollectionName VARCHAR(255) NOT NULL,
  Year           INT
);

CREATE TABLE IF NOT EXISTS CollectionTrack (
  CollectionID INT NOT NULL,
  TrackID      INT NOT NULL,
  PRIMARY KEY (CollectionID, TrackID),
  FOREIGN KEY (CollectionID) REFERENCES Collections(CollectionID) ON DELETE CASCADE,
  FOREIGN KEY (TrackID)      REFERENCES Tracks(TrackID)           ON DELETE CASCADE
);